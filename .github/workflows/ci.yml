name: 🧪 CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: 🧪 Test & Build
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18, 20]

    steps:
    - name: 📦 Checkout code
      uses: actions/checkout@v4

    - name: 🔧 Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: 📥 Install dependencies
      run: npm ci

    - name: 🧹 Run linter
      run: npm run lint

    - name: 🧪 Run tests
      run: npm test -- --coverage --watchAll=false

    - name: 🏗️ Build application
      run: npm run build

    - name: 📊 Upload coverage to Codecov
      if: matrix.node-version == 18
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: crypto-dashboard-coverage

  deploy-preview:
    name: 🚀 Deploy Preview
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'pull_request'

    steps:
    - name: 📦 Checkout code
      uses: actions/checkout@v4

    - name: 🔧 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 18
        cache: 'npm'

    - name: 📥 Install dependencies
      run: npm ci

    - name: 🏗️ Build application
      run: npm run build

    - name: 📝 Comment deployment info
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: '🚀 **Preview deployment ready!** \n\n✅ Build completed successfully\n✅ All tests passed\n✅ Ready for review'
          })